xlab = "Number of Bikers",
ylab = "Trip Combo")
legend("topright", legend = c("Round Trip", "One Way"), col = c("#30bf10", "#ce0404"), lwd=10)
legend("topright", legend = c("MP = Montly Pass", "FP = Flex Pass", "WU = Walk-up"))
library(dplyr)
library(car)
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
# print(unique(as.vector(bikes$Trip.Route.Category)))
# "Round Trip" "One Way"
# print(unique(as.vector(bikes$Passholder.Type)))
# "Monthly Pass" "Flex Pass"    "Walk-up"
# Combinations Types:
# - Round Trip, Monthly Pass
# - Round Trip, Flex Pass
# - Round Trip, Walk-up
# - One Way, Monthly Pass
# - One Way, Flex Pass
# - One Way, Walk-up
get_combos <- function(trip, pass) {
combo_num <- nrow(bikes %>% filter((Trip.Route.Category == trip & Passholder.Type == pass )))
}
r_mp <- get_combos("Round Trip", "Monthly Pass")
r_fp <- get_combos("Round Trip", "Flex Pass")
r_wu <- get_combos("Round Trip", "Walk-up")
o_mp <- get_combos("One Way", "Monthly Pass")
o_fp <- get_combos("One Way", "Flex Pass")
o_wu <- get_combos("One Way", "Walk-up")
my_combos <- c(r_mp, r_fp, r_wu, o_mp, o_fp, o_wu)
barplot(my_combos, main = paste0("Breakdown of Trip Route Category-Passholder Type Combinations"), horiz=TRUE,
names.arg=c("RT-MP", "OW-MP","RT-FP", "OW-FP", "RT-WU", "OW-WU"),
col=c("#30bf10", "#ce0404", "#30bf10", "#ce0404","#30bf10", "#ce0404"),
xlab = "Number of Bikers",
ylab = "Trip Combo")
legend("topright", legend = c("Round Trip", "One Way"), col = c("#30bf10", "#ce0404"), lwd=10)
legend("bottomright", legend = c("MP = Montly Pass", "FP = Flex Pass", "WU = Walk-up"))
library(dplyr)
library(car)
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
# print(unique(as.vector(bikes$Trip.Route.Category)))
# "Round Trip" "One Way"
# print(unique(as.vector(bikes$Passholder.Type)))
# "Monthly Pass" "Flex Pass"    "Walk-up"
# Combinations Types:
# - Round Trip, Monthly Pass
# - Round Trip, Flex Pass
# - Round Trip, Walk-up
# - One Way, Monthly Pass
# - One Way, Flex Pass
# - One Way, Walk-up
get_combos <- function(trip, pass) {
combo_num <- nrow(bikes %>% filter((Trip.Route.Category == trip & Passholder.Type == pass )))
}
r_mp <- get_combos("Round Trip", "Monthly Pass")
r_fp <- get_combos("Round Trip", "Flex Pass")
r_wu <- get_combos("Round Trip", "Walk-up")
o_mp <- get_combos("One Way", "Monthly Pass")
o_fp <- get_combos("One Way", "Flex Pass")
o_wu <- get_combos("One Way", "Walk-up")
my_combos <- c(r_mp, r_fp, r_wu, o_mp, o_fp, o_wu)
barplot(my_combos, main = paste0("Breakdown of Trip Route Category-Passholder Type Combinations"), horiz=TRUE,
names.arg=c("RT-MP", "OW-MP","RT-FP", "OW-FP", "RT-WU", "OW-WU"),
col=c("#30bf10", "#ce0404", "#30bf10", "#ce0404","#30bf10", "#ce0404"),
xlab = "Number of Bikers",
ylab = "Trip Combo")
legend("topright", legend = c("Round Trip", "One Way", "MP = Montly Pass", "FP = Flex Pass", "WU = Walk-up"), col = c("#30bf10", "#ce0404"), lwd=10)
# legend("bottomright", legend = c("MP = Montly Pass", "FP = Flex Pass", "WU = Walk-up"))
library(dplyr)
library(car)
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
# print(unique(as.vector(bikes$Trip.Route.Category)))
# "Round Trip" "One Way"
# print(unique(as.vector(bikes$Passholder.Type)))
# "Monthly Pass" "Flex Pass"    "Walk-up"
# Combinations Types:
# - Round Trip, Monthly Pass
# - Round Trip, Flex Pass
# - Round Trip, Walk-up
# - One Way, Monthly Pass
# - One Way, Flex Pass
# - One Way, Walk-up
get_combos <- function(trip, pass) {
combo_num <- nrow(bikes %>% filter((Trip.Route.Category == trip & Passholder.Type == pass )))
}
r_mp <- get_combos("Round Trip", "Monthly Pass")
r_fp <- get_combos("Round Trip", "Flex Pass")
r_wu <- get_combos("Round Trip", "Walk-up")
o_mp <- get_combos("One Way", "Monthly Pass")
o_fp <- get_combos("One Way", "Flex Pass")
o_wu <- get_combos("One Way", "Walk-up")
my_combos <- c(r_mp, r_fp, r_wu, o_mp, o_fp, o_wu)
barplot(my_combos, main = paste0("Breakdown of Trip Route Category-Passholder Type Combinations"), horiz=TRUE,
names.arg=c("RT-MP", "OW-MP","RT-FP", "OW-FP", "RT-WU", "OW-WU"),
col=c("#30bf10", "#ce0404", "#30bf10", "#ce0404","#30bf10", "#ce0404"),
xlab = "Number of Bikers",
ylab = "Trip Combo")
legend("topright", legend = c("Round Trip", "One Way", "MP = Montly Pass", "FP = Flex Pass", "WU = Walk-up"), col = c("#30bf10", "#ce0404", "white", "white", "white"), lwd=10)
# legend("bottomright", legend = c("MP = Montly Pass", "FP = Flex Pass", "WU = Walk-up"))
library(dplyr)
library(car)
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
# print(unique(as.vector(bikes$Trip.Route.Category)))
# "Round Trip" "One Way"
# print(unique(as.vector(bikes$Passholder.Type)))
# "Monthly Pass" "Flex Pass"    "Walk-up"
# Combinations Types:
# - Round Trip, Monthly Pass
# - Round Trip, Flex Pass
# - Round Trip, Walk-up
# - One Way, Monthly Pass
# - One Way, Flex Pass
# - One Way, Walk-up
get_combos <- function(trip, pass) {
combo_num <- nrow(bikes %>% filter((Trip.Route.Category == trip & Passholder.Type == pass )))
}
r_mp <- get_combos("Round Trip", "Monthly Pass")
r_fp <- get_combos("Round Trip", "Flex Pass")
r_wu <- get_combos("Round Trip", "Walk-up")
o_mp <- get_combos("One Way", "Monthly Pass")
o_fp <- get_combos("One Way", "Flex Pass")
o_wu <- get_combos("One Way", "Walk-up")
my_combos <- c(r_mp, r_fp, r_wu, o_mp, o_fp, o_wu)
barplot(my_combos, main = paste0("Breakdown of Trip Route Category-Passholder Type Combinations"), horiz=TRUE,
names.arg=c("RT-MP", "OW-MP","RT-FP", "OW-FP", "RT-WU", "OW-WU"),
col=c("#30bf10", "#ce0404", "#30bf10", "#ce0404","#30bf10", "#ce0404"),
xlab = "Number of Bikers",
ylab = "Trip Combo")
legend("topright", legend = c("Round Trip", "One Way", "MP = Montly Pass", "FP = Flex Pass", "WU = Walk-up"), col = c("#30bf10", "#ce0404", "white", "white", "white"), lwd=10)
library(dplyr)
library(car)
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
# print(unique(as.vector(bikes$Trip.Route.Category)))
# "Round Trip" "One Way"
# print(unique(as.vector(bikes$Passholder.Type)))
# "Monthly Pass" "Flex Pass"    "Walk-up"
# Combinations Types:
# - Round Trip, Monthly Pass
# - Round Trip, Flex Pass
# - Round Trip, Walk-up
# - One Way, Monthly Pass
# - One Way, Flex Pass
# - One Way, Walk-up
get_combos <- function(trip, pass) {
combo_num <- nrow(bikes %>% filter((Trip.Route.Category == trip & Passholder.Type == pass )))
}
r_mp <- get_combos("Round Trip", "Monthly Pass")
r_fp <- get_combos("Round Trip", "Flex Pass")
r_wu <- get_combos("Round Trip", "Walk-up")
o_mp <- get_combos("One Way", "Monthly Pass")
o_fp <- get_combos("One Way", "Flex Pass")
o_wu <- get_combos("One Way", "Walk-up")
my_combos <- c(r_mp, r_fp, r_wu, o_mp, o_fp, o_wu)
barplot(my_combos, main = paste0("Breakdown of Trip Route Category-Passholder Type Combinations"), horiz=TRUE,
names.arg=c("RT-MP", "OW-MP","RT-FP", "OW-FP", "RT-WU", "OW-WU"),
col=c("#30bf10", "#ce0404", "#30bf10", "#ce0404","#30bf10", "#ce0404"),
xlab = "Number of Bikers",
ylab = "Trip Combo")
legend("topright", legend = c("RT = Round Trip", "OW = One Way", "MP = Montly Pass", "FP = Flex Pass", "WU = Walk-up"), col = c("#30bf10", "#ce0404", "white", "white", "white"), lwd=10)
library(dplyr)
library(car)
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
# print(unique(as.vector(bikes$Trip.Route.Category)))
# "Round Trip" "One Way"
# print(unique(as.vector(bikes$Passholder.Type)))
# "Monthly Pass" "Flex Pass"    "Walk-up"
# Combinations Types:
# - Round Trip, Monthly Pass
# - Round Trip, Flex Pass
# - Round Trip, Walk-up
# - One Way, Monthly Pass
# - One Way, Flex Pass
# - One Way, Walk-up
get_combos <- function(trip, pass) {
combo_num <- nrow(bikes %>% filter((Trip.Route.Category == trip & Passholder.Type == pass )))
}
r_mp <- get_combos("Round Trip", "Monthly Pass")
r_fp <- get_combos("Round Trip", "Flex Pass")
r_wu <- get_combos("Round Trip", "Walk-up")
o_mp <- get_combos("One Way", "Monthly Pass")
o_fp <- get_combos("One Way", "Flex Pass")
o_wu <- get_combos("One Way", "Walk-up")
my_combos <- c(r_mp, r_fp, r_wu, o_mp, o_fp, o_wu)
barplot(my_combos, main = paste0("Breakdown of Trip Route Category-Passholder Type Combinations"), horiz=TRUE,
names.arg=c("RT-MP", "OW-MP","RT-FP", "OW-FP", "RT-WU", "OW-WU"),
col=c("#30bf10", "#ce0404", "#30bf10", "#ce0404","#30bf10", "#ce0404"),
xlab = "Number of Bikers",
ylab = "Trip Combination")
legend("topright", legend = c("RT = Round Trip", "OW = One Way", "MP = Montly Pass", "FP = Flex Pass", "WU = Walk-up"), col = c("#30bf10", "#ce0404", "white", "white", "white"), lwd=10)
library(dplyr)
library(car)
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
# print(unique(as.vector(bikes$Trip.Route.Category)))
# "Round Trip" "One Way"
# print(unique(as.vector(bikes$Passholder.Type)))
# "Monthly Pass" "Flex Pass"    "Walk-up"
# Combinations Types:
# - Round Trip, Monthly Pass
# - Round Trip, Flex Pass
# - Round Trip, Walk-up
# - One Way, Monthly Pass
# - One Way, Flex Pass
# - One Way, Walk-up
get_combos <- function(trip, pass) {
combo_num <- nrow(bikes %>% filter((Trip.Route.Category == trip & Passholder.Type == pass )))
}
r_mp <- get_combos("Round Trip", "Monthly Pass")
r_fp <- get_combos("Round Trip", "Flex Pass")
r_wu <- get_combos("Round Trip", "Walk-up")
o_mp <- get_combos("One Way", "Monthly Pass")
o_fp <- get_combos("One Way", "Flex Pass")
o_wu <- get_combos("One Way", "Walk-up")
my_combos <- c(r_mp, r_fp, r_wu, o_mp, o_fp, o_wu)
barplot(my_combos, main = paste0("Breakdown of Trip Route Category-Passholder Type Combinations"), horiz=TRUE,
names.arg=c("RT-MP", "OW-MP","RT-FP", "OW-FP", "RT-WU", "OW-WU"),
col=c("#30bf10", "#ce0404", "#30bf10", "#ce0404","#30bf10", "#ce0404"),
xlab = "Number of Riders",
ylab = "Trip Combination")
legend("topright", legend = c("RT = Round Trip", "OW = One Way", "MP = Montly Pass", "FP = Flex Pass", "WU = Walk-up"), col = c("#30bf10", "#ce0404", "white", "white", "white"), lwd=10)
library(dplyr)
library(car)
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
names(bikes)
all_stations <- select(bikes, Starting.Station.ID, Ending.Station.ID)
# dir.create(file.path("/Users/elizabethlin/desktop/co", "output"))
write.csv(all_stations, "all_stations.csv")
bike_table <- table(start = all_stations$Starting.Station.ID, end = all_stations$Ending.Station.ID)
start <- mutate(all_stations, start_num = length(unique(all_stations$Start.Station.ID)))
end <- mutate(all_stations, end_num = length(unique(all_stations$End.Station.ID)))
all_stations
View(all_stations)
library(dplyr)
library(car)
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
names(bikes)
all_stations <- select(bikes, Starting.Station.ID, Ending.Station.ID)
# dir.create(file.path("/Users/elizabethlin/desktop/co", "output"))
write.csv(all_stations, "all_stations.csv")
bike_table <- table(start = all_stations$Starting.Station.ID, end = all_stations$Ending.Station.ID)
start <- mutate(all_stations, start_num = length(unique(all_stations$Start.Station.ID)))
end <- mutate(all_stations, end_num = length(unique(all_stations$End.Station.ID)))
print(unique(as.vector(all_stations$start_num)))
print(unique(as.vector(all_stations$end_num)))
View(all_stations)
start
View(start)
print(unique(as.vector(all_stations$Start.Station.ID)))
print(unique(as.vector(all_stations$End.Station.ID)))
library(dplyr)
library(car)
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
names(bikes)
all_stations <- select(bikes, Starting.Station.ID, Ending.Station.ID)
# dir.create(file.path("/Users/elizabethlin/desktop/co", "output"))
write.csv(all_stations, "all_stations.csv")
bike_table <- table(start = all_stations$Starting.Station.ID, end = all_stations$Ending.Station.ID)
# start <- mutate(all_stations, start_num = length(unique(all_stations$Start.Station.ID)))
# end <- mutate(all_stations, end_num = length(unique(all_stations$End.Station.ID)))
print(unique(as.vector(all_stations$Start.Station.ID)))
print(unique(as.vector(all_stations$End.Station.ID)))
library(dplyr)
library(car)
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
names(bikes)
all_stations <- select(bikes, Starting.Station.ID, Ending.Station.ID)
# dir.create(file.path("/Users/elizabethlin/desktop/co", "output"))
write.csv(all_stations, "all_stations.csv")
bike_table <- table(start = all_stations$Starting.Station.ID, end = all_stations$Ending.Station.ID)
# start <- mutate(all_stations, start_num = length(unique(all_stations$Start.Station.ID)))
# end <- mutate(all_stations, end_num = length(unique(all_stations$End.Station.ID)))
print(unique(all_stations$Start.Station.ID))
print(unique(as.vector(all_stations$End.Station.ID)))
as.vector(all_stations$Start.Station.ID)
print(unique(bike_table$Start.Station.ID))
print(unique(as.vector(bike_table$End.Station.ID)))
View(bike_table)
library(dplyr)
library(car)
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
names(bikes)
all_stations <- select(bikes, Starting.Station.ID, Ending.Station.ID)
# dir.create(file.path("/Users/elizabethlin/desktop/co", "output"))
write.csv(all_stations, "all_stations.csv")
bike_table <- table(start = all_stations$Starting.Station.ID, end = all_stations$Ending.Station.ID)
# start <- mutate(all_stations, start_num = length(unique(all_stations$Start.Station.ID)))
# end <- mutate(all_stations, end_num = length(unique(all_stations$End.Station.ID)))
# print(unique(bike_table$Start.Station.ID))
# print(unique(as.vector(bike_table$End.Station.ID)))
bike_table
View(bike_table)
is.data.frame(bike_table)
bike_table <- as.data.frame(bike_table)
is.data.frame(bike_table)
max_freq <- max(as.vector(bike_table$Freq), na.rm = FALSE)
max_freq
max_table <- select(data.frame(filter(bike_table, Freq == max_freq)), "start", "end")
max_table
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
library(dplyr)
library(car)
source("metro-bike-share-stations.csv")
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
names(bikes)
all_stations <- select(bikes, Starting.Station.ID, Ending.Station.ID)
# dir.create(file.path("/Users/elizabethlin/desktop/co", "output"))
write.csv(all_stations, "all_stations.csv")
bike_table <- table(start = all_stations$Starting.Station.ID, end = all_stations$Ending.Station.ID)
bike_table <- as.data.frame(bike_table)
max_freq <- max(as.vector(bike_table$Freq), na.rm = FALSE)
max_tab <- select(data.frame(filter(bike_table, Freq == max_freq)), "start", "end")
# select(data.frame(filter(any_drinking_2012, male_female_diff == similar_drinking_df)), "location", "state", "male_female_diff")
# start <- mutate(all_stations, start_num = length(unique(all_stations$Start.Station.ID)))
# end <- mutate(all_stations, end_num = length(unique(all_stations$End.Station.ID)))
# print(unique(bike_table$Start.Station.ID))
# print(unique(as.vector(bike_table$End.Station.ID)))
max_start <- max_tab$start
max_end <- max_tab$end
max_start
max_end <- sapply(max_tab$end, as.character)
max_end
max_start <- sapply(max_tab$start, as.character)
max_start
max_start_station_string <- sapply(max_start_station_name, as.character)
max_end_station_string <- sapply(max_end_station_name, as.character)
library(dplyr)
library(car)
source("metro-bike-share-stations.csv")
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
names(bikes)
all_stations <- select(bikes, Starting.Station.ID, Ending.Station.ID)
# dir.create(file.path("/Users/elizabethlin/desktop/co", "output"))
write.csv(all_stations, "all_stations.csv")
bike_table <- table(start = all_stations$Starting.Station.ID, end = all_stations$Ending.Station.ID)
bike_table <- as.data.frame(bike_table)
max_freq <- max(as.vector(bike_table$Freq), na.rm = FALSE)
max_tab <- select(data.frame(filter(bike_table, Freq == max_freq)), "start", "end")
max_start <- sapply(max_tab$start, as.character)
max_end <- sapply(max_tab$end, as.character)
station_data <- read.csv("data/metro-bike-share-stations.csv", stringsAsFactors = FALSE)
station_data <- as.data.frame(station_data)
max_start_station_name <- select(data.frame(filter(station_data, station_data$Station_ID == max_start)), "Station_Name")
max_end_station_name <- select(data.frame(filter(station_data, station_data$Station_ID == max_end)), "Station_Name")
max_start_station_string <- sapply(max_start_station_name, as.character)
max_end_station_string <- sapply(max_end_station_name, as.character)
print(paste0("The most frequent/popular stop and start station combination is the route from ", max_start_station_string,
" to ", max_end_station_string, "."))
max_start_station_string <- sapply(max_start_station_name, as.character)
max_start_station_name
max_start_station_name <- select(data.frame(filter(station_data, station_data$Station_ID == max_start)), "Station_Name")
station_data <- read.csv("data/metro-bike-share-stations.csv", stringsAsFactors = FALSE)
getwd()
library(dplyr)
library(car)
source("metro-bike-share-stations.csv")
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
names(bikes)
all_stations <- select(bikes, Starting.Station.ID, Ending.Station.ID)
# dir.create(file.path("/Users/elizabethlin/desktop/co", "output"))
write.csv(all_stations, "all_stations.csv")
bike_table <- table(start = all_stations$Starting.Station.ID, end = all_stations$Ending.Station.ID)
bike_table <- as.data.frame(bike_table)
max_freq <- max(as.vector(bike_table$Freq), na.rm = FALSE)
max_tab <- select(data.frame(filter(bike_table, Freq == max_freq)), "start", "end")
max_start <- sapply(max_tab$start, as.character)
max_end <- sapply(max_tab$end, as.character)
station_data <- read.csv("data/metro-bike-share-stations.csv", stringsAsFactors = FALSE)
station_data <- as.data.frame(station_data)
max_start_station_name <- select(data.frame(filter(station_data, station_data$Station_ID == max_start)), "Station_Name")
max_end_station_name <- select(data.frame(filter(station_data, station_data$Station_ID == max_end)), "Station_Name")
max_start_station_string <- sapply(max_start_station_name, as.character)
max_end_station_string <- sapply(max_end_station_name, as.character)
print(paste0("The most frequent/popular stop and start station combination is the route from ", max_start_station_string,
" to ", max_end_station_string, "."))
library(dplyr)
library(car)
source("metro-bike-share-stations.csv")
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
names(bikes)
all_stations <- select(bikes, Starting.Station.ID, Ending.Station.ID)
# dir.create(file.path("/Users/elizabethlin/desktop/co", "output"))
write.csv(all_stations, "all_stations.csv")
bike_table <- table(start = all_stations$Starting.Station.ID, end = all_stations$Ending.Station.ID)
bike_table <- as.data.frame(bike_table)
max_freq <- max(as.vector(bike_table$Freq), na.rm = FALSE)
max_tab <- select(data.frame(filter(bike_table, Freq == max_freq)), "start", "end")
max_start <- sapply(max_tab$start, as.character)
max_end <- sapply(max_tab$end, as.character)
station_data <- read.csv("data/metro-bike-share-stations.csv", stringsAsFactors = FALSE)
station_data <- as.data.frame(station_data)
max_start_station_name <- select(data.frame(filter(station_data, station_data$Station_ID == max_start)), "Station_Name")
max_end_station_name <- select(data.frame(filter(station_data, station_data$Station_ID == max_end)), "Station_Name")
max_start_station_string <- sapply(max_start_station_name, as.character)
max_end_station_string <- sapply(max_end_station_name, as.character)
print(paste0("The most frequent/popular stop and start station combination is the route from ", max_start_station_string,
" to ", max_end_station_string, " with a count of ", max_freq, " rides."))
library(dplyr)
library(car)
source("metro-bike-share-stations.csv")
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
names(bikes)
all_stations <- select(bikes, Starting.Station.ID, Ending.Station.ID)
# dir.create(file.path("/Users/elizabethlin/desktop/co", "output"))
write.csv(all_stations, "all_stations.csv")
bike_table <- table(start = all_stations$Starting.Station.ID, end = all_stations$Ending.Station.ID)
bike_table <- as.data.frame(bike_table)
max_freq <- max(as.vector(bike_table$Freq), na.rm = FALSE)
max_tab <- select(data.frame(filter(bike_table, Freq == max_freq)), "start", "end")
max_start <- sapply(max_tab$start, as.character)
max_end <- sapply(max_tab$end, as.character)
station_data <- read.csv("data/metro-bike-share-stations.csv", stringsAsFactors = FALSE)
station_data <- as.data.frame(station_data)
max_start_station_name <- select(data.frame(filter(station_data, station_data$Station_ID == max_start)), "Station_Name")
max_end_station_name <- select(data.frame(filter(station_data, station_data$Station_ID == max_end)), "Station_Name")
max_start_station_string <- sapply(max_start_station_name, as.character)
max_end_station_string <- sapply(max_end_station_name, as.character)
print(paste0("The most frequent/popular stop and start station combination is the route from ", max_start_station_string,
" to ", max_end_station_string, " with a count of ", max_freq, " rides."))
library(dplyr)
library(car)
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
names(bikes)
all_stations <- select(bikes, Starting.Station.ID, Ending.Station.ID)
# dir.create(file.path("/Users/elizabethlin/desktop/co", "output"))
write.csv(all_stations, "all_stations.csv")
bike_table <- table(start = all_stations$Starting.Station.ID, end = all_stations$Ending.Station.ID)
start <- mutate(all_stations, start_num = length(unique(all_stations$Start.Station.ID)))
end <- mutate(all_stations, end_num = length(unique(all_stations$End.Station.ID)))
round_trip_num <- nrow(bikes %>% filter((Trip.Route.Category == "Round Trip")))
one_way_num <- nrow(bikes %>% filter((Trip.Route.Category == "One Way")))
compare_vector <- c(round_trip_num, one_way_num)
pie(compare_vector, col=c("#ff91d9", "#90fcff"), labels=c("Round Trip", "One Way"), main = "Distribution of Trip Routes")
max_end
max_freq
View(bike_table)
library(dplyr)
library(car)
source("metro-bike-share-stations.csv")
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
names(bikes)
all_stations <- select(bikes, Starting.Station.ID, Ending.Station.ID)
# dir.create(file.path("/Users/elizabethlin/desktop/co", "output"))
write.csv(all_stations, "all_stations.csv")
bike_table <- table(start = all_stations$Starting.Station.ID, end = all_stations$Ending.Station.ID)
bike_table <- as.data.frame(bike_table)
write.csv(bike_table, "bike_table.csv")
##### Most Frequent Combo Route #####
max_freq <- max(as.vector(bike_table$Freq), na.rm = FALSE)
max_tab <- select(data.frame(filter(bike_table, Freq == max_freq)), "start", "end")
max_start <- sapply(max_tab$start, as.character)
max_end <- sapply(max_tab$end, as.character)
station_data <- read.csv("data/metro-bike-share-stations.csv", stringsAsFactors = FALSE)
station_data <- as.data.frame(station_data)
max_start_station_name <- select(data.frame(filter(station_data, station_data$Station_ID == max_start)), "Station_Name")
max_end_station_name <- select(data.frame(filter(station_data, station_data$Station_ID == max_end)), "Station_Name")
max_start_station_string <- sapply(max_start_station_name, as.character)
max_end_station_string <- sapply(max_end_station_name, as.character)
print(paste0("The most frequent/popular stop and start station combination is the route from ", max_start_station_string,
" to ", max_end_station_string, " with a count of ", max_freq, " rides."))
pop_routes <- read.csv("pop_route.csv", stringsAsFactors = FALSE)
View(pop_routes)
library(dplyr)
library(car)
source("metro-bike-share-stations.csv")
source("pop_route.csv")
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
# names(bikes)
all_stations <- select(bikes, Starting.Station.ID, Ending.Station.ID)
write.csv(all_stations, "all_stations.csv")
bike_table <- table(start = all_stations$Starting.Station.ID, end = all_stations$Ending.Station.ID)
bike_table <- as.data.frame(bike_table)
write.csv(bike_table, "bike_table.csv")
##### Most Frequent Combo Route #####
max_freq <- max(as.vector(bike_table$Freq), na.rm = FALSE)
max_tab <- select(data.frame(filter(bike_table, Freq == max_freq)), "start", "end")
max_start <- sapply(max_tab$start, as.character)
max_end <- sapply(max_tab$end, as.character)
station_data <- read.csv("data/metro-bike-share-stations.csv", stringsAsFactors = FALSE)
station_data <- as.data.frame(station_data)
max_start_station_name <- select(data.frame(filter(station_data, station_data$Station_ID == max_start)), "Station_Name")
max_end_station_name <- select(data.frame(filter(station_data, station_data$Station_ID == max_end)), "Station_Name")
max_start_station_string <- sapply(max_start_station_name, as.character)
max_end_station_string <- sapply(max_end_station_name, as.character)
print(paste0("The most frequent/popular stop and start station combination is the route from ", max_start_station_string,
" to ", max_end_station_string, " with a count of ", max_freq, " rides."))
pop_routes <- read.csv("pop_route.csv", stringsAsFactors = FALSE)
View(pop_routes)
library(dplyr)
library(car)
source("metro-bike-share-stations.csv")
source("pop_route.csv")
bikes <- read.csv("metro.csv", stringsAsFactors = FALSE)
# names(bikes)
all_stations <- select(bikes, Starting.Station.ID, Ending.Station.ID)
write.csv(all_stations, "all_stations.csv")
bike_table <- table(start = all_stations$Starting.Station.ID, end = all_stations$Ending.Station.ID)
bike_table <- as.data.frame(bike_table)
write.csv(bike_table, "bike_table.csv")
##### Most Frequent Combo Route #####
max_freq <- max(as.vector(bike_table$Freq), na.rm = FALSE)
max_tab <- select(data.frame(filter(bike_table, Freq == max_freq)), "start", "end")
max_start <- sapply(max_tab$start, as.character)
max_end <- sapply(max_tab$end, as.character)
station_data <- read.csv("data/metro-bike-share-stations.csv", stringsAsFactors = FALSE)
station_data <- as.data.frame(station_data)
max_start_station_name <- select(data.frame(filter(station_data, station_data$Station_ID == max_start)), "Station_Name")
max_end_station_name <- select(data.frame(filter(station_data, station_data$Station_ID == max_end)), "Station_Name")
max_start_station_string <- sapply(max_start_station_name, as.character)
max_end_station_string <- sapply(max_end_station_name, as.character)
print(paste0("The most frequent/popular stop and start station combination is the route from ", max_start_station_string,
" to ", max_end_station_string, " with a count of ", max_freq, " rides."))
pop_routes <- read.csv("pop_route.csv", stringsAsFactors = FALSE)
pop_routes <- read.csv("pop_route.csv", stringsAsFactors = FALSE)
pop_routes
View(pop_routes)
